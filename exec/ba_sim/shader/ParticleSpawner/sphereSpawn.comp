#version 450
#extension GL_ARB_compute_variable_group_size : require

#include "common.glsl"
#include "random.glsl"

layout(binding=SPAWNER_BUFFER_BINDING,std430) buffer ParticleBuffer
{
    Particle particles[];
};

layout(local_size_variable) in;

uniform vec3 center;
uniform float radius;
uniform float mass;
uniform float density;
uniform float temperature;
uniform float render_size;
uniform uint num_of_particles;

uniform uint random_seed;

void main()
{
    if(gl_GlobalInvocationID.x >= num_of_particles)
        return;

    // generate a random position
    uint seed = random_seed*gl_GlobalInvocationID.x;
    vec2 hammersley = genHammersleySet(seed, num_of_particles);
    vec3 randomPos = randSphere( hammersley.x, hammersley.y,rand(seed),radius);
    particles[gl_GlobalInvocationID.x].position = vec4(randomPos + center,1);

    // set all the attributes
    particles[gl_GlobalInvocationID.x].velocity = vec4(0,0,0,0);
    particles[gl_GlobalInvocationID.x].mass = mass;
    particles[gl_GlobalInvocationID.x].density = density;
    particles[gl_GlobalInvocationID.x].temperature = temperature;
    particles[gl_GlobalInvocationID.x].renderSize = render_size;
}
