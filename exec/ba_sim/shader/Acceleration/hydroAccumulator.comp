#version 450 core
#extension GL_ARB_compute_variable_group_size : require

#include "common.glsl"
#include "mathConst.glsl"

layout(binding=PARTICLE_HYDRO_BUFFER_BINDING,std430) buffer ParticleHydro
{
    vec4 hydro[];
};

uniform float k;
uniform float rest_density;
uniform float sink_th;

layout(local_size_variable) in;

void main()
{
    float density = 0;

//    if(hydro[gl_GlobalInvocationID.x].w >0)
        for(uint i=0; i < HYDROS_PER_PARTICLE; i++)
        {
            density += hydro[NUM_PARTICLES * i + gl_GlobalInvocationID.x].y;
        }

//    float pressure = k*(density - rest_density);
    float pressure = k * density.x;
    vec4 hydi = hydro[gl_GlobalInvocationID.x];


//    float isSink = (density > sink_th) ? hydro[gl_GlobalInvocationID.x].w : hydro[gl_GlobalInvocationID.x].w;

#ifdef FAST_SPH
    hydro[gl_GlobalInvocationID.x].xy = vec2(pressure,density);
#else
    float dpdh = abs(density - hydi.y / hydi.w);
    hydro[gl_GlobalInvocationID.x].xyw = vec3(pressure,density,(isinf(dpdh))?0:dpdh);
#endif
}