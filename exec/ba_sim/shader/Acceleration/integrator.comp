#version 450 core
#extension GL_ARB_compute_variable_group_size : require

#include "common.glsl"

layout(binding=PARTICLE_POSITION_BUFFER_BINDING,std430) buffer ParticlePositions
{
    vec4 positions[];
};

layout(binding=PARTICLE_VELOCITY_BUFFER_BINDING,std430) buffer ParticleVelocities
{
    vec4 velocities[];
};

layout(binding=PARTICLE_ACCELERATION_BUFFER_BINDING,std430) buffer ParticleAccelerations
{
    vec4 accelerations[];
};

layout(local_size_variable) in;

uniform float dt;
uniform float vel_dt;

void main()
{
    vec4 acc = vec4(0,0,0,0);
    for(uint i=0; i < ACCELERATIONS_PER_PARTICLE; i++)
    {
        acc += accelerations[NUM_PARTICLES * i + gl_GlobalInvocationID.x];
    }

    // update the velocity i-1/2 to i+1/2
    vec3 vel = velocities[gl_GlobalInvocationID.x].xyz + acc.xyz * vel_dt;

    // update position i to i+1
    positions[gl_GlobalInvocationID.x].xyz += vel * dt;

    velocities[gl_GlobalInvocationID.x].xyz = vel;
}